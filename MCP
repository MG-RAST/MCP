#!/soft/packages/python/2.6/bin/python

import argparse
import os
import json
import sys
import re

# Getting path to MCP
MCP_path = os.path.realpath(__file__)
matchObj = re.match(r'(^.*\/)', MCP_path)
MCP_dir = matchObj.group(0)

# Adding modules directory to path
path = list(sys.path)
sys.path.insert(0, MCP_dir+"mcp_modules/")

json_conf_file = open(MCP_dir+'conf/conf.json')
json_conf = json.load(json_conf_file)

def main():
    parser = argparse.ArgumentParser(description='MG-RAST Control Program (MCP)')
    parser.add_argument('subsystem', metavar='subsystem',
                   help="An MG-RAST subsystem. The current list of subsystems includes: '" + 
                   "', '".join(json_conf["global"]["subsystems"])+"'")
    parser.add_argument('params', metavar='params', nargs=argparse.REMAINDER,
                   help='Additional arguments should specify an action followed by action parameters.')
    args = parser.parse_args()
    subsystem = args.subsystem
    params = args.params

    if subsystem in json_conf["global"]["subsystems"]:
        # Retrieve the appropriate "subsystem" python module and class (module and class names should be identical)
        module = __import__(subsystem)
        myclass = getattr(module, subsystem)
        # Create the python class instance dynamically
        mysubsystem = myclass(MCP_path)
        mysubsystem.run(params)

    return 0

if __name__ == "__main__":
    sys.exit( main() )
